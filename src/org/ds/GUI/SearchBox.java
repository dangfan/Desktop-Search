/*
 * SearchBox.java
 *
 * 搜索框（主窗口）
 *
 * Created on 2010-8-30, 9:05:25
 */
package org.ds.GUI;

import java.awt.*;
import java.awt.event.*;
import java.awt.geom.RoundRectangle2D;
import javax.swing.*;
import org.ds.indexer.FolderTraverser;

/**
 * 搜索主窗口
 */
public class SearchBox extends javax.swing.JFrame
{

    private boolean isDragging = false;     // 是否在拖拽中
    private int prevX, prevY;               // 拖拽前的坐标
    private FolderTraverser traverser;      // 文件夹遍历器
    private Image img;                      // 背景图像

    /**
     * 创建新的搜索窗口
     * @param traverser 遍历器
     */
    public SearchBox(FolderTraverser traverser)
    {
        this.traverser = traverser;
        this.img = new ImageIcon(getClass().getResource(
                "Resources/box.png")).getImage();   // 载入图片
        setLooks();         // 设置外观
        initComponents();   // 初始化组件
        setTrayIcon();      // 设置托盘区域图标
    }

    /**
     * 初始化窗口外观
     */
    private void setLooks()
    {
        //将在匿名类中使用的当前JFrame
        final JFrame jf = this;

        //改变窗口形状为圆角矩形
        //方法来自于：http://is.gd/eKXBh
        this.addComponentListener(new ComponentAdapter()
        {

            @Override
            public void componentResized(ComponentEvent evt)
            {
                Shape shape = new RoundRectangle2D.Float(
                        0, 0, img.getWidth(null), img.getHeight(null), 10, 10);
                com.sun.awt.AWTUtilities.setWindowShape(jf, shape);
            }
        });

        //设置背景
        this.setContentPane(new JPanel()
        {

            @Override
            public void paintComponent(Graphics g)
            {
                g.drawImage(img, 0, 0, null);
            }
        });
    }

    // 设置托盘区域图标
    private void setTrayIcon()
    {
        SystemTray systemTray = SystemTray.getSystemTray(); // 得到托盘对象
        TrayIcon icon = null;
        try
        {
            icon = new TrayIcon(new ImageIcon(getClass().getResource(
                    "Resources/tray.png")).getImage(), "桌面搜索"); // 载入图形
            systemTray.add(icon);
        }
        catch (Exception e)
        {
            e.printStackTrace(System.err);
        }
        this.addWindowListener(new WindowAdapter()
        {
            // 最小化时隐藏窗口

            @Override
            public void windowIconified(WindowEvent e)
            {
                setVisible(false);
            }
        });
        icon.addMouseListener(new MouseAdapter()
        {
            // 左键单击时还原窗口

            @Override
            public void mouseClicked(MouseEvent e)
            {
                if (e.getButton() == MouseEvent.BUTTON1)
                {
                    setVisible(true);
                    setExtendedState(JFrame.NORMAL);    //显示在前端
                }
            }

            // 处理弹出菜单
            @Override
            public void mousePressed(MouseEvent evt)
            {
                if (evt.isPopupTrigger())
                {
                    popupMenu.setLocation(evt.getX() + 3, evt.getY() - 85);
                    popupMenu.setInvoker(popupMenu);
                    popupMenu.setVisible(true);
                }
            }

            // 处理弹出菜单
            @Override
            public void mouseReleased(MouseEvent evt)
            {
                if (evt.isPopupTrigger())
                {
                    popupMenu.setLocation(evt.getX() + 3, evt.getY() - 85);
                    popupMenu.setInvoker(popupMenu);
                    popupMenu.setVisible(true);
                }
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popupMenu = new javax.swing.JPopupMenu();
        menuItemConfig = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        menuItemAbout = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        menuItemExit = new javax.swing.JMenuItem();
        jLabel = new javax.swing.JLabel();
        searchJTextField = new javax.swing.JTextField();
        searchJButton = new javax.swing.JButton();

        menuItemConfig.setText("设置");
        menuItemConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemConfigActionPerformed(evt);
            }
        });
        popupMenu.add(menuItemConfig);
        popupMenu.add(jSeparator1);

        menuItemAbout.setText("关于");
        menuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAboutActionPerformed(evt);
            }
        });
        popupMenu.add(menuItemAbout);
        popupMenu.add(jSeparator2);

        menuItemExit.setText("退出");
        menuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExitActionPerformed(evt);
            }
        });
        popupMenu.add(menuItemExit);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        getContentPane().setLayout(new java.awt.FlowLayout());

        jLabel.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        jLabel.setText("桌面搜索");
        getContentPane().add(jLabel);

        searchJTextField.setColumns(15);
        searchJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJTextFieldActionPerformed(evt);
            }
        });
        searchJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchJTextFieldKeyPressed(evt);
            }
        });
        getContentPane().add(searchJTextField);

        searchJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/ds/GUI/Resources/search.png"))); // NOI18N
        searchJButton.setToolTipText("搜索");
        this.getRootPane().setDefaultButton(searchJButton); //设为默认按钮
        searchJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJButtonActionPerformed(evt);
            }
        });
        searchJButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchJButtonKeyPressed(evt);
            }
        });
        getContentPane().add(searchJButton);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-306)/2, (screenSize.height-47)/2, 306, 47);
    }// </editor-fold>//GEN-END:initComponents

    // 按下事件，处理拖拽动作
    private void formMousePressed(java.awt.event.MouseEvent evt)//GEN-FIRST:event_formMousePressed
    {
        isDragging = true;
        prevX = evt.getX();
        prevY = evt.getY();
        if (evt.isPopupTrigger())
        {
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_formMousePressed

    // 松开鼠标事件，处理拖拽动作
    private void formMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_formMouseReleased
    {
        isDragging = false;
        if (evt.isPopupTrigger())
        {
            popupMenu.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_formMouseReleased

    // 拖拽
    private void formMouseDragged(java.awt.event.MouseEvent evt)//GEN-FIRST:event_formMouseDragged
    {
        // 如果鼠标按下，则更新位置
        if (isDragging)
        {
            int left = this.getLocation().x;    // 当前鼠标位置
            int top = this.getLocation().y;
            this.setLocation(left + evt.getX() - prevX, // 设置窗口新位置
                    top + evt.getY() - prevY);
        }
    }//GEN-LAST:event_formMouseDragged

    // 退出按钮
    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuItemExitActionPerformed
    {//GEN-HEADEREND:event_menuItemExitActionPerformed
        setVisible(false);  // 先消失
        traverser.stop();   // 保存索引
        System.exit(0);     // 退出
    }//GEN-LAST:event_menuItemExitActionPerformed

    // 关于窗口
    private void menuItemAboutActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuItemAboutActionPerformed
    {//GEN-HEADEREND:event_menuItemAboutActionPerformed
        new AboutDialog(this, true).setVisible(true);
    }//GEN-LAST:event_menuItemAboutActionPerformed

    // 设置窗口
    private void menuItemConfigActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_menuItemConfigActionPerformed
    {//GEN-HEADEREND:event_menuItemConfigActionPerformed
        new ConfigDialog(this, true, traverser).setVisible(true);
    }//GEN-LAST:event_menuItemConfigActionPerformed

    // ESC键 消失
    private void searchJTextFieldKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_searchJTextFieldKeyPressed
    {//GEN-HEADEREND:event_searchJTextFieldKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
            setVisible(false);
        }
    }//GEN-LAST:event_searchJTextFieldKeyPressed

    // ESC键 消失
    private void searchJButtonKeyPressed(java.awt.event.KeyEvent evt)//GEN-FIRST:event_searchJButtonKeyPressed
    {//GEN-HEADEREND:event_searchJButtonKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
            setVisible(false);
        }
    }//GEN-LAST:event_searchJButtonKeyPressed

    // 回车键，搜索
    private void searchJTextFieldActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchJTextFieldActionPerformed
    {//GEN-HEADEREND:event_searchJTextFieldActionPerformed
        if (!searchJTextField.getText().isEmpty())
        {
            new SearchResultDialog(this, true, searchJTextField.getText()).setVisible(
                    true);
        }
        else    //显示tooltip
        {
            searchJTextField.setToolTipText("请输入内容");   //提示内容
            ToolTipManager.sharedInstance().setDismissDelay(1500);  //显示时间
            Action action = searchJTextField.getActionMap().get("postTip"); //得到action对象
            ActionEvent ae = new ActionEvent(searchJTextField,
                    ActionEvent.ACTION_PERFORMED,
                    "postTip", EventQueue.getMostRecentEventTime(), 0); //产生事件
            action.actionPerformed(ae);     //显示tooltip
            searchJTextField.setToolTipText(null);  //清除内容
        }
    }//GEN-LAST:event_searchJTextFieldActionPerformed

    // 搜索按钮
    private void searchJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchJButtonActionPerformed
    {//GEN-HEADEREND:event_searchJButtonActionPerformed
        searchJTextFieldActionPerformed(evt);
    }//GEN-LAST:event_searchJButtonActionPerformed

    // 关闭窗口
    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        traverser.stop();   //保存索引
    }//GEN-LAST:event_formWindowClosing
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JMenuItem menuItemAbout;
    private javax.swing.JMenuItem menuItemConfig;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JPopupMenu popupMenu;
    private javax.swing.JButton searchJButton;
    private javax.swing.JTextField searchJTextField;
    // End of variables declaration//GEN-END:variables
}
